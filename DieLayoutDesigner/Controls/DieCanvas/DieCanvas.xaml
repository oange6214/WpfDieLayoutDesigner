<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:DieLayoutDesigner.Behaviors"
    xmlns:controls="clr-namespace:DieLayoutDesigner.Controls"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <SolidColorBrush
        x:Key="PreviewAdornerFillBrush"
        Color="#407ACC" />
    <SolidColorBrush
        x:Key="ResizeThumbStroke"
        Color="#128FEA" />
    <SolidColorBrush
        x:Key="ResizeThumbStroke_IsMouseOver"
        Color="#007ACC" />
    <SolidColorBrush
        x:Key="ResizeThumbStroke_IsDragging"
        Color="#004477" />
    <Pen
        x:Key="PreviewAdornerPen"
        Brush="#007ACC"
        Thickness="1" />

    <Style TargetType="{x:Type controls:DieCanvas}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DieCanvas}">
                    <ScrollViewer
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Auto">

                        <!--  Control Layer - 負責捕獲所有輸入事件  -->
                        <Canvas
                            x:Name="PART_WorkArea"
                            Background="Coral"
                            Focusable="True">

                            <i:Interaction.Behaviors>
                                <behaviors:DiePanelBehavior
                                    ContextMenuCommand="{Binding ContextMenuCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    MaxScale="{Binding MaxScale, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    MinScale="{Binding MinScale, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    MouseDownCommand="{Binding StartDrawingCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    MouseMoveCommand="{Binding DrawingCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    MouseUpCommand="{Binding EndDrawingCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    PanEndCommand="{Binding PanEndCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    PanStartCommand="{Binding PanStartCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    PanningCommand="{Binding PanningCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    ScaleValue="{Binding ScaleValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    XOffset="{Binding XOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    YOffset="{Binding YOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    ZoomFactor="{Binding ZoomFactor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                            </i:Interaction.Behaviors>

                            <!--  Shapes Layer - 實際的形狀容器  -->
                            <ItemsControl
                                x:Name="PART_ShapesContainer"
                                Canvas.Left="{Binding XOffset, RelativeSource={RelativeSource TemplatedParent}}"
                                Canvas.Top="{Binding YOffset, RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{Binding DieWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                Height="{Binding DieHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                Background="WhiteSmoke"
                                ItemsSource="{Binding Shapes, RelativeSource={RelativeSource TemplatedParent}}"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                RenderOptions.EdgeMode="Aliased"
                                UseLayoutRounding="True">

                                <ItemsControl.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ScaleValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ScaleY="{Binding ScaleValue, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                    </TransformGroup>
                                </ItemsControl.RenderTransform>

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding TopLeft.X}" />
                                        <Setter Property="Canvas.Top" Value="{Binding TopLeft.Y}" />
                                        <Setter Property="Panel.ZIndex" Value="{Binding ZIndex}" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle
                                            Width="{Binding DieSize.Width}"
                                            Height="{Binding DieSize.Height}"
                                            Cursor="SizeAll"
                                            Fill="{Binding FillColor}">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShapeEditBehavior
                                                    IsSelected="{Binding IsSelected}"
                                                    ScaleValue="{Binding ScaleValue, RelativeSource={RelativeSource AncestorType=controls:DieCanvas}, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectedShape="{Binding SelectedShape, RelativeSource={RelativeSource AncestorType=controls:DieCanvas}}" />
                                            </i:Interaction.Behaviors>
                                        </Rectangle>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Canvas>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ResizeThumbStyle"
        TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRect"
                            Fill="White" />

                        <Rectangle
                            x:Name="BorderRect"
                            Fill="Transparent"
                            Stroke="{StaticResource ResizeThumbStroke}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundRect" Property="Fill" Value="#F0F0F0" />
                            <Setter TargetName="BorderRect" Property="Stroke" Value="{StaticResource ResizeThumbStroke_IsMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="BackgroundRect" Property="Fill" Value="#E0E0E0" />
                            <Setter TargetName="BorderRect" Property="Stroke" Value="{StaticResource ResizeThumbStroke_IsDragging}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>